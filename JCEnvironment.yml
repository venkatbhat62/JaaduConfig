# Environment audit spec 
# Author: havembha@gmail.com,  2023-08-19
# Format
###
### you may use https://regex101.com/ to  test the regular expression definitions
###
---
LogFilePath: ./
### platform name or application name covering all components covered by this environment spec
### have one environment spec file per platform or application to manage many platforms/ application of an organization
Platform: Platform1

### Parameter name needs to be unique across all sections - OS, Component, and Environment
### Parameters can be defined under OS, Component or Environment.
### Parameter value can be redefined in other sections to override previous value defined in prior section(s).
### Parameters under OS will be read first, under Component next and under Environment last.
### While reading parameters under Component, if a value is present under specific component, 
###   it will be stored as latest desired value, overriding the value previously defined under OS
### While reading parameters under Environment, if a value is present under specific environment, 
###   it will be stored as latest desired value, overriding the value previously defined under OS or Component
### In all cases (OS, Component, Environment sections), value under 'All' will be stored 
###   if the value is not yet stored before in any prior section.
###
OS:
  SunOS:
    JCCommandToGetOSType: uname
    JCCommandToGetOSVersion: cat /etc/os-release |grep VERSION_ID |awk -F'=' '{print $2}'
    ### ksh command used to run programs, used in subprocess.run(args=['ksh', '-c', command])
    JCCommandShell: ksh -c
    ### add current working directory to path
    LD_LIBRARY_PATH: ./
    ### add current working directory to path
    PATH: ./
    JCHome: '/var/www/JaaduConfig'
    JCConfigPath: '/var/www/JaaduConfig/conf'
    JCLogFilePath: '/var/www/JaaduConfig/logs'
    
  Linux:
    ### bash command used to run programs, used in subprocess.run(args=['bash', '-c', command])
    JCCommandShell: bash -c
    ### add current working directory to path
    LD_LIBRARY_PATH: ./
    ### add current working directory to path
    PATH: ./
    JCHome: '/var/www/JaaduConfig'
    JCTemplatePath: /'var/www/JaaduConfig/templates'
    JCConfigPath: '/var/www/JaaduConfig/conf'
    JCLogFilePath: '/var/www/JaaduConfig/logs'

  Windows:
    ### powershell command used to gather environment details 
    ###   commands specified in <subsystem><platform><component>.yml are executed using this powershell command
    ###  this will be used to execute other commands specified for Windows environment
    JCCommandShell: 'C:/Program Files/PowerShell/7/pwsh.exe -NonInteractive -command'
    ### root path on target host where the contents of Common and Custom files will be copied
    ###   where other sub-directories like Common.PrevVersion, Custom.PrevVersion, Reports, Logs are present
    JCHome: 'C:\Users\${username}\documents\github\JaaduConfig\'
    JCTemplatePath: 'C:\Users\${username}\documents\github\JaaduConfig\templates'
    JCConfigPath: 'C:\Users\${username}\documents\github\JaaduConfig\conf'
    JCLogFilePath: 'C:\Users\${username}\documents\github\JaaduConfig\logs'
  All:
    JCHome: '$HOME/JaaduConfig'
    JCTemplatePath: '$HOME/JaaduConfig/templates'
    JCConfigPath: '$HOME/JaaduConfig/conf'
    JCLogFilePath: '$HOME/JaaduConfig/logs'
    JCAddCommentToConfigHeader: 0
    ### versions to be kept for all environments
    AllLogFileVersions: 9
    AllTomcatDebugLevel: INFO
    FileRetencyDurationInDays: 7

Component:
  ### using regular expression syntax, specify how to find component name of the application of platform
  ###  so that component specific variable values can be derived run time
  ### AppConfig naming convention - <platform><componentName>.<subsystemName>.<configFileName>[.<version>].yml where
  ###   <platform>  - keep this same as platform name defined before for this environment
  ###   <componentName> - abbreviated component name
  ###   <subsystemName> - Apps for main application, DB for Database configurations, OS for OS configurations
  ###   [.<version>] - this application version will be appended run time to derive the config file to be used
  ###           based on current application release installed on that host.
  ###        If the system is Apps, command specified under CommandToGetAppVersion will be used 
  ###           run time to derive the application version
  ###        For OS subsystem, command specified under CommandToGetOSVersion is used to derive the version
  ###        For DB subsystem, command specified under CommandToGetDBVersion is used to derive the version
  ###        This field is optional
  ###   <operation> - compare, conn, license, test, stats... 
  ###           each operation will have it's own spec file per platform, per component.
  ###           It is feasible to maintain that per subsystem also.
  ###
  ### Examples:
  ###    Platform1APP.Apps.compare.yml, Platform1APP.OS.compare.yml, Platform1APP.DB.compare.yml
  ###    Platform1APP.Apps.compare.2.yml, Platform1APP.OS.compare.8.yml, Platform1APP.DB.compare.10.yml
  ###    Platform1APP.Apps.conn.yml, Platform1APP.OS.conn.yml, Platform1APP.DB.conn.yml
  ###
  ### Component spec is read when current hostname matches to the hostname regular expression defined under component name.
  ### Include only the component type used while defining the hostname, not any environment indicator used as part of the hostname
  ### Use wild card for site and environment portion of the hostname. If no such hostname convention exist, list all the
  ###   possible hostnames under all environments for that component type here so that the component spec applies to all hosts of 
  ###   that component type. 
  ### Use environment indicator like d or dv for DEV, t or st, i or it for test, ut, u for UAT, p or pd for production environment
  ###   in environment section so that variables can be defined that applies to all components in that environment.
  ### Specification under environment overrides the spec under component.
  APPWin:
    ### if the current hostname match to below spec, it is considered of component type APP
    HostName: (LAPTOP-QOCNVF0T1)
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames of local site. 
    ### {{ JASiteName }} variable is set with this value. This variable can be used to formulate 
    ###   HostNames: in connection spec file
    ###   ComparePatterns: in cert, license, inventory, health etc spec to formulate expected output from command execution
    SiteNamePrefixLength: 3

  APPLinux:
    HostName: (...)(d|t|u|p)(app)|(havembha)
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3

  CS:
    ### if the current hostname match to below spec, it is considered of component type APP
    HostName: (...)(d|t|u|p)(cs)
    ### datamask for this component
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3

  DB:
    ### if the current hostname match to below spec, it is considered of component type DB
    HostName: (...)(d|t|u|p)(db)
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3

  FS:
    ### if the current hostname match to below spec, it is considered of component type FS
    HostName: (...)(d|t|u|p)(fs)
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3

  MGT:
    ### if the current hostname match to below spec, it is considered of component type MGT
    HostName: (...)(d|t|u|p)(mgt)
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3

  WS:
    ### if the current hostname match to below spec, it is considered of component type WS
    HostName: (LAPTOP-QOCNVF0T|(...)(d|t|u|p)(ws))
    ### number of characters to ignore while picking up partial hostname from current hostname and derive other hostnames
    ### of local site. This is used by connectivity test module.
    SitePrefixLength: 3
    WSDebugLevel: INFO
    WSLogFileSize: 1000000

Environment:
  ### HostName: Define this parameter so that environment specific variable values are picked up as last
  ###  overriding value to supercede values defined in OS and component section(s) if any.
  ###  When current hostname match to the regular expression spec, all definitions under that environment will be used.
  ###  Spec under other environment without a regular expression match are ignored.
  ###
  ### Use environment indicator like d or dv for DEV, t or st, i or it for test, ut, u for UAT, p or pd for production environment
  ###   in environment section so that variables can be defined that applies to all components in that environment.
  ###
  ### It is possible to define the hostname regular expression in a broader way like one that applies to non-prod (all dev, system test
  ###   integration test or staging or pre-prod or uat) and another for prod (differest geographic locations or site groups) when
  ###   the variable spec needs to apply to that broader group.
  ### 
  ### Specification under environment overrides the spec under component and OS sections.
   Dev:
     # specify hostname in regular expression form, when current hostname where JAAudit runs match to this expression,
     #  specification under that environment will supercede specs at OS level and component level specs.
     ### Windows PC to test the folws on Windows OS
     HostName: ((...)(d)(...)([0-9][0-9]))|(LAPTOP-QOCNVF0T)
     WSDebugLevel: DEBUG
     SNMPDestinationIP: 127.0.0.1
     WSDebugLevel: INFO
     WSLogFileSize: 1000000
     SquidProxyHosts: [ 'devSquidProxy1', 'devSquidProxy2']
     
   Test:
     ### keep  logs and result files for 7 days 
     FileRetencyDurationInDays: 7
     ### ubuntu host to test the flows on Linux
     HostName: (...)(t)(...)([0-9][0-9])|(havembha)
     WSDebugLevel: DEBUG
     WSLogFileSize: 10000000
     ### versions to be kept for all environments
     AllLogFileVersions: 3
     SNMPDestinationIP: 127.0.0.1
     SquidProxyHosts: [ 'testSquidProxy1', 'testSquidProxy2']
   UAT:
     HostName: (...)(u)(...)([0-9][0-9])
     WSDebugLevel: DEBUG
     WSLogFileSize: 10000000
     SNMPDestinationIP: 127.0.0.2

   Prod1:
     ### keep  logs and result files for 14 days 
     FileRetencyDurationInDays: 14
     HostName: (...)(p1)(...)([0-9][0-9])
     WSLogFileSize: 90000000
     SNMPDestinationIP: 127.0.0.3
     SquidProxyHosts: [ 'prod1SquidProxy1', 'prod1SquidProxy2']
   Prod2:
     ### keep  logs and result files for 14 days 
     FileRetencyDurationInDays: 14
     HostName: (...)(p2)(...)([0-9][0-9])
     WSLogFileSize: 90000000
     SNMPDestinationIP: 127.0.0.4
     SquidProxyHosts: [ 'prod2SquidProxy1', 'prod2SquidProxy2']
     
   ## Keep definition for 'All' environment at the end.
   ##  this is to ensure, Dev, Test, UAT, Prod etc environment specific values are seen/read first and 
   ##  assigned to variables. If a variable is not yet defined under Dev, Test.. like environment,
   ##  and that variable is defined under 'All', value under 'All' will be picked up
   ##  if variable is already defined under environment before, value under 'All' will be ignored.
   ## HostName definition not needed in 'All' section, it will not be used for any selection criteria.
   All:
     ### debug level 0, no debug, 1 to 4, 4 being max details
     JCDebugLevel: 3
     JCHome: $HOME/JCConfigGen/
     JCAddCommentToConfigHeader: 1
